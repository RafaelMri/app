{"version":3,"sources":["app/components/App.js","app/components/Create.js","app/components/Nav.js","app/components/Sign.js","app/initialize.js"],"names":["App","Home","Component","Create","state","data","testnet","tokenType","copied","handleChange","bind","setTokenType","setTestnet","generateURL","setState","type","event","target","name","value","e","s","btoa","JSON","stringify","link","location","protocol","host","preventDefault","console","log","title","message","account","tokenCode","trustAmount","logoUrl","onCopy","Nav","Sign","props","signerAccount","appName","atob","match","params","id","submit","stellarAccount","document","addEventListener","render","querySelector"],"mappings":"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","file":"public/app.js","sourcesContent":["import React from 'react';\nimport Nav from './Nav';\nimport Create from './Create';\nimport Sign from './Sign';\n\nimport {\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom'\n\nimport {Grid} from 'react-uikit3';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n\n        <Nav />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/create\" component={Create}/>\n          <Route path=\"/:id\" component={Sign}/>\n        </Switch>\n\n      </div>\n    );\n  }\n}\n\nconst Home = () => (\n  <div className='container uk-padding uk-light'>\n      <h2>About</h2>\n      <p>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Sed posuere consectetur est at lobortis. Aenean lacinia bibendum nulla sed consectetur. Nullam quis risus eget urna mollis ornare vel eu leo.</p>\n  </div>\n)\n","import React from 'react';\n\nimport {Grid} from 'react-uikit3';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nexport default class Create extends React.Component {\n\n  constructor() {\n\n    super()\n\n    this.state = {\n      data: {\n        testnet: false,\n        tokenType: 'ALPHA4',\n        copied: false\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.setTokenType = this.setTokenType.bind(this);\n    this.setTestnet = this.setTestnet.bind(this);\n    this.generateURL = this.generateURL.bind(this);\n\n    // title: \"\",\n    // transactionMemo: \"\",\n    // sourceAccount: \"\",\n    // tokenCode: \"\",\n    // tokenCodeLong: \"\",\n    // tokenDescription: \"\",\n    // url: \"\",\n    // amount: 0,\n    // network: \"public\",\n  }\n\n  setTestnet(state) {\n    var data = this.state.data;\n    data.testnet = state;\n    this.setState(data)\n  }\n\n  setTokenType(type) {\n    var data = this.state.data\n    data.tokenType = type\n    this.setState(data)\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  generateURL(e) {\n    var s = btoa(JSON.stringify(this.state.data))\n    this.setState({ link: location.protocol + '//' + location.host + \"/\" + s })\n    e.preventDefault()\n  }\n\n  onCopy() {\n    console.log(\"Copied!\")\n  }\n\n  render() {\n    return (\n      <Grid className=\"uk-child-width-1-2@m uk-flex-center uk-padding\">\n        <div className='uk-padding uk-light'>\n          <h2><b>Create</b> <small>new Token Trust Form</small></h2>\n\n          <h4>Instructions</h4>\n\n          <ol>\n            <li>Populate the form</li>\n            <li>Copy your unique URL</li>\n            <li>Share with your end users</li>\n            <li>Donate</li>\n          </ol>\n\n          <form onChange={this.handleChange} onSubmit={this.generateURL} method=\"POST\">\n              <fieldset className=\"uk-fieldset\">\n\n                  <Grid className=\"uk-button-group uk-margin-bottom uk-child-width-1-2@m\">\n                    <div>\n                      <a className={ 'uk-button uk-width-1-1 ' + (!this.state.data.testnet ? 'uk-button-default' : '')} onClick={() => this.setTestnet(false)}>Public</a>\n                    </div>\n                    <div>\n                      <a className={ 'uk-button uk-width-1-1 ' + (this.state.data.testnet ? 'uk-button-default' : '')} onClick={() => this.setTestnet(true)}>Testnet</a>\n                    </div>\n                  </Grid>\n\n                  <div className=\"uk-margin-bottom\">\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"Title\" name=\"title\" value={this.state.data.title} />\n                  </div>\n\n                  <div className=\"uk-margin-bottom\">\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"Message\" name=\"message\" value={this.state.data.message} />\n                  </div>\n\n                  <div className=\"uk-margin-bottom\">\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"Account\" name=\"account\" value={this.state.data.account} />\n                  </div>\n\n\n                  <Grid className=\"uk-button-group uk-margin-bottom uk-child-width-1-2@m\">\n                    <div>\n                      <a className={ 'uk-button uk-width-1-1 ' + (this.state.data.tokenType=='ALPHA4' ? 'uk-button-default' : '')} onClick={() => this.setTokenType('ALPHA4')}>Alphanumeric 4</a>\n                    </div>\n                    <div>\n                      <a className={ 'uk-button uk-width-1-1 ' + (this.state.data.tokenType=='ALPHA12' ? 'uk-button-default' : '')} onClick={() => this.setTokenType('ALPHA12')}>Alphanumeric 12</a>\n                    </div>\n                  </Grid>\n\n                  <div className=\"uk-margin-bottom\">\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"Token Code\" name=\"tokenCode\" value={this.state.data.tokenCode} />\n                  </div>\n\n                  <div className=\"uk-margin-bottom\">\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"Trust Amount\" name=\"trustAmount\" value={this.state.data.trustAmount} />\n                  </div>\n\n                  <div className=\"uk-margin-bottom\">\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"Logo URL\" name=\"logoUrl\" value={this.state.data.logoUrl} />\n                  </div>\n\n                  {/* <div className=\"uk-margin\">\n                      <select className=\"uk-select\">\n                          <option>Option 01</option>\n                          <option>Option 02</option>\n                      </select>\n                  </div>\n\n                  <div className=\"uk-margin\">\n                      <textarea className=\"uk-textarea\" rows=\"5\" placeholder=\"Textarea\"></textarea>\n                  </div>\n\n                  <div className=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\n                      <label><input className=\"uk-radio\" type=\"radio\" name=\"radio2\" checked /> A</label>\n                      <label><input className=\"uk-radio\" type=\"radio\" name=\"radio2\" /> B</label>\n                  </div>\n\n                  <div className=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" checked /> A</label>\n                      <label><input className=\"uk-checkbox\" type=\"checkbox\" /> B</label>\n                  </div>\n\n                  <div className=\"uk-margin\">\n                      <input className=\"uk-range\" type=\"range\" value=\"2\" min=\"0\" max=\"10\" step=\"0.1\" />\n                  </div> */}\n\n                  <div className=\"uk-margin-bottom\">\n                    <button className=\"uk-button uk-button-primary uk-button-large uk-width-1-1\"><b>Generate Unique URL</b></button>\n                  </div>\n\n              </fieldset>\n          </form>\n\n          <div className=\"uk-margin\">\n            <div className=\"uk-inline copy-field\">\n                <CopyToClipboard onCopy={this.onCopy} text={this.state.link} className=\"uk-form-icon uk-form-icon-flip uk-form-icon-clickable\" >\n                  <span><i className=\"material-icons\">&#xE14D;</i></span>\n                </CopyToClipboard>\n                <input className=\"uk-input uk-width-1-1\" type=\"text\" placeholder=\"Your unique URL\" value={this.state.link} disabled />\n            </div>\n          </div>\n\n          {/* <div className=\"uk-margin uk-margin-top\">\n            <Grid className=\"uk-alert-transparent uk-padding-small\">\n              <div className=\"uk-width-2-2\">\n                <input className=\"uk-input\" type=\"text\" placeholder=\"Your unique URL\" value={this.state.link} disabled />\n              </div>\n              <div className=\"uk-width-1-2\">\n                <CopyToClipboard onCopy={this.onCopy} text={this.state.link}>\n                  <button className=\"uk-button uk-button-default>Copy to Clipboard</button>\n                </CopyToClipboard>\n              </div>\n            </Grid>\n          </div> */}\n\n        </div>\n      </Grid>\n    )\n  }\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport {NavBar} from 'react-uikit3';\nimport {Sticky} from 'react-uikit3';\n\nexport default class Nav extends React.Component {\n  render() {\n    return (\n      <Sticky>\n        <NavBar>\n          <div className=\"uk-navbar-left uk-margin-left\">\n            <Link to=\"/\" className=\"uk-navbar-item uk-logo\"><b>Trustlane</b>.me</Link>\n          </div>\n          <div className='uk-navbar-right uk-margin-right'>\n            <ul className='uk-navbar-nav'>\n              <li><Link to=\"/\">About</Link></li>\n              <li><Link to=\"/create\">Create</Link></li>\n            </ul>\n          </div>\n        </NavBar>\n      </Sticky>\n    );\n  }\n}\n","import React from 'react';\n\nimport {Grid} from 'react-uikit3';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nexport default class Sign extends React.Component {\n  constructor(props) {\n\n    super(props)\n\n    this.state = {\n      signerAccount: '',\n      appName: 'ABCompany',\n      account: 'GC2BKLYOOYPDEFJKLKY6FNNRQMGFLVHJKQRGNSSRRGSMPGF32LHCQVGF',\n      trustAmount: 10000,\n      tokenCode: 'ABCD',\n      logoUrl: 'http://lorempixel.com/800/300',\n      message: 'Nullam quis risus eget urna mollis ornare vel eu leo. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.'\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n\n    var data = atob(this.props.match.params.id);\n    console.log(data);\n\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    return (\n      <Grid className=\"uk-child-width-1-2@m uk-flex-center uk-padding\">\n        <div className='container uk-padding uk-light'>\n          <p className=\"uk-text-right\">Token Trust Form generated by &nbsp;<a href=\"#\"><strong>{this.state.appName}</strong></a> | <a className=\"text-primary\">Create yours</a></p>\n\n          <h2><span className=\"uk-badge uk-padding-small network-badge\">{this.state.testnet ? 'Testnet' : 'Public Net'}</span> Trust new token <strong>ABCD</strong></h2>\n\n          <form onChange={this.handleChange} onSubmit={this.submit} method=\"POST\">\n            <fieldset className=\"uk-fieldset\">\n\n              <h3>Overview</h3>\n\n              <img src={this.state.logoUrl} />\n\n              <div className=\"uk-margin uk-margin-bottom-large\">\n                <p>{this.state.message}</p>\n              </div>\n\n              <h3>Token Information</h3>\n\n              <Grid className=\"uk-grid-divider uk-child-width-expand@s uk-margin-bottom\">\n                <div className=\"uk-text-right\">\n                  <label>Token ({(this.state.tokenType=='ALPHA12' ? 'Alpha 12' : 'Alpha 4')})</label>\n                  <h3 className=\"uk-margin-remove\"><strong>{this.state.tokenCode}</strong></h3>\n                </div>\n                <div>\n                  <label>Trust Limit</label>\n                  <h3 className=\"uk-margin-remove\"><strong>{this.state.trustAmount} {this.state.tokenCode}</strong></h3>\n                </div>\n              </Grid>\n\n              <hr/>\n\n              <div className=\"uk-margin-bottom uk-text-center\">\n                <label>Issuing Account</label>\n                <br/>\n                <span className=\"code uk-margin-top uk-width-1-1\">{this.state.stellarAccount}</span>\n              </div>\n\n              {/* <div className=\"uk-margin\">\n\n                <input className=\"uk-input uk-width-1-1\" type=\"text\" placeholder=\"Token Code\" name=\"tokenCode\" value={this.state.tokenCode} />\n              <Grid className=\"uk-grid-small uk-margin-bottom\">\n                <div className=\"uk-width-1-3\">\n\n                </div>\n                <div className=\"uk-width-2-3\">\n\n                </div>\n              </Grid> */}\n\n              <h3>Paste Your <u>Private Key</u></h3>\n\n              <div className=\"uk-margin-bottom\">\n                  <input className=\"uk-input code\" type=\"text\" placeholder=\"GC2BKL...\" name=\"signerAccount\" value={this.state.signerAccount} />\n              </div>\n\n              <h5><strong>Security Information:</strong> <em>We never store your Private Key - anywhere. It is used in your browser to sign the transaction with the <a href=\"http://\" className=\"text-primary\">Stellar-JS-SDK</a>. Verify code of the sign component <a className=\"text-primary\">here</a>.</em>\n              </h5>\n\n              <div className=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\n                 <label><input className=\"uk-checkbox uk-margin-small-right\" type=\"checkbox\" /> I agree to the terms & conditions.</label>\n             </div>\n\n             <div className=\"uk-margin-bottom\">\n               <button className=\"uk-button uk-button-primary uk-button-large uk-width-1-1\"><b>Assign Trust</b></button>\n             </div>\n\n            </fieldset>\n          </form>\n        </div>\n      </Grid>\n    )\n  }\n\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from 'components/App';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<Router><App /></Router>, document.querySelector('#app'));\n});\n"]}